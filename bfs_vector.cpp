//=================================================================================================================
// TODO:
// -> Rever código.
//
//=================================================================================================================

//-----------------------------------------------------------------------------------------------------------------

//=================================================================================================================
// Notas:
// -> 
//
//=================================================================================================================

//-----------------------------------------------------------------------------------------------------------------

//=================================================================================================================
// Bibliotecas:
//
#include <vector>
#include <queue>
#include <boost/dynamic_bitset> 							// Bitset de tamanho dinâmico. boost.org library.
//
//=================================================================================================================

//-----------------------------------------------------------------------------------------------------------------

//=================================================================================================================
// Variáveis:
//
#define GRAFO Graph
#define VERTICE Vertex
#define NUMERO_DE_VERTICES numVertex
#define VECTOR_BOOL_VISITADOS visitados
//
//=================================================================================================================

//-----------------------------------------------------------------------------------------------------------------

//=================================================================================================================
// Função: BFS - Breadth First Search
// Parâmetros: Grafo, vértice raiz.
// Retorna: int (ERROS)
//
//-----------------------------------------------------------------------------------------------------------------
// Possiveis problemas:
//
//-----------------------------------------------------------------------------------------------------------------
// TODO:
//
//=================================================================================================================


int bfs(GRAFO, VERTICE){
	G.VECTOR_BOOL_VISITADOS.assign (NUMERO_DE_VERTICES, 0);	// Desmarca todos os vertices de G ======> VECTOR_BOOL_VISITADOS.reset();
	std::queue<int> Q;										// Inicializa a lista Q vazia
	G.VECTOR_BOOL_VISITADOS[s] = 1;							// Marca s como visitado
	Q.push(s);												// Inserir s em Q
	while (!Q.empty()){										// Inicio do loop. Só para quando Q for vazia
		Q.pop();											// Remover s de Q
		for (i = 0; i <= VECTOR_BOOL_VISITADOS.size(); i++){// Percorrer vizinhos
			if (G.VECTOR_BOOL_VISITADOS[i]){				// Se i for vizinho, então:
				if (!G.VECTOR_BOOL_VISITADOS[i]){			// Se i não foi visitado:
					G.VECTOR_BOOL_VISITADOS[i] = 1; 		// Marcar i como visitado
					Q.push(i);								// Retirar i de Q
				}
			}
		}
	}


}